*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}ol[class],ul[class]{padding:0}body,h1,h2,h3,h4,li,ol[class],p,ul[class]{margin:0}body{scroll-behavior:smooth;text-rendering:optimizeSpeed;font-family:"TT Hoves",sans-serif}ol[class],ul[class]{list-style:none}a{-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto;text-decoration:none}img{max-width:100%;display:block;vertical-align:top}button,input,select,textarea{font:inherit}button{background:0 0;border:0}.container{max-width:1200px;margin:0 auto;padding:0 15px}@font-face{font-family:"TT Hoves";src:url(../fonts/TTHoves-Bold.woff2) format("woff2"),url(../fonts/TTHoves-Bold.woff) format("woff"),url(../fonts/TTHoves-Bold.ttf) format("truetype");font-weight:700;font-style:normal}@font-face{font-family:"TT Hoves";src:url(../fonts/TTHoves-Regular.woff2) format("woff2"),url(../fonts/TTHoves-Regular.woff) format("woff"),url(../fonts/TTHoves-Regular.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:"TT Hoves";src:url(../fonts/TTHoves-Light.woff2) format("woff2"),url(../fonts/TTHoves-Light.woff) format("woff"),url(../fonts/TTHoves-Light.ttf) format("truetype");font-weight:300;font-style:normal}@font-face{font-family:"TT Hoves";src:url(../fonts/TTHoves-Medium.woff2) format("woff2"),url(../fonts/TTHoves-Medium.woff) format("woff"),url(../fonts/TTHoves-Medium.ttf) format("truetype");font-weight:500;font-style:normal}header{background:#fff}.header__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:10px;height:100px;z-index:2}.logo{-webkit-box-flex:0;-ms-flex:0 1 40%;flex:0 1 40%}.burger{position:relative;height:15px;width:28px;display:none;margin-left:auto}.burger span{background:#333;display:block;content:"";width:30px;height:2px;position:absolute;-webkit-transition:.3s;-o-transition:.3s;transition:.3s;border-radius:3px}.burger span:first-child{top:0;left:0}.burger span:last-child{bottom:0;left:0}.burger.close span:first-child{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);top:7px}.burger.close span:last-child{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);bottom:6px}.nav{-webkit-transition:.4s;-o-transition:.4s;transition:.4s;width:100%}.nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:20px}.nav__link{display:block;font-size:12px;color:#000;padding:4px 0;text-transform:uppercase;border-top:1px solid transparent;border-bottom:1px solid transparent;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.nav__link:hover{border-top:1px solid #000;border-bottom:1px solid #000}@media screen and (max-width:768px){.burger{display:block}.nav{position:absolute;top:-100%;left:0;z-index:-1;background-color:#f9f9f9}.nav__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:start;font-size:16px;gap:0}.nav__item{width:100%}.nav__item.active{background-color:#bdbdbd}.nav__link{width:100%;height:100%;padding:15px 0 15px 20px}.nav__link:hover{border-top:1px solid transparent;border-bottom:1px solid transparent;background-color:rgba(200,200,200,.5)}.nav.open{top:100px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */