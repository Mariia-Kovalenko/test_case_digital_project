*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}ol[class],ul[class]{padding:0}body,h1,h2,h3,h4,li,ol[class],p,ul[class]{margin:0}body{scroll-behavior:smooth;text-rendering:optimizeSpeed;font-family:"TT Hoves",sans-serif}ol[class],ul[class]{list-style:none}a{-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto;text-decoration:none}img,picture{max-width:100%;display:block;vertical-align:top}button,input,select,textarea{font:inherit}button{background:0 0;border:0}section{padding:30px 0;margin:60px 0}.container{max-width:1200px;margin:0 auto;padding:0 15px}.btn{background:url(../../img/arrow.svg) no-repeat right 30px center #fff;width:220px;height:70px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-size:12px;letter-spacing:2.4px;text-transform:uppercase;-webkit-transition:.3s;-o-transition:.3s;transition:.3s;cursor:pointer}.btn:hover{background:url(../../img/arrow.svg) no-repeat right 30px center #f2f2f2}.btn-dark,.btn-dark:hover{background:url(../../img/arrow-light.svg) no-repeat right 30px center #333}.btn-dark{color:#fff}.btn-dark:hover{opacity:.8}.section-heading{font-size:64px;color:#bdbdbd;font-weight:300;margin-bottom:20px}.right{margin-left:auto}input,textarea{display:block;border:0}input:focus,textarea:focus{outline:0}textarea{resize:none}label{display:block}.about{background:#fbfbfb;padding:30px 70px;position:relative}.about__info{margin-left:auto;max-width:400px}.about__text{font:300 16px/25px "TT Hoves";margin-bottom:20px}.images__grid{display:grid;grid-template-columns:repeat(2,270px);grid-template-rows:repeat(2,-webkit-fit-content);grid-template-rows:repeat(2,fit-content);gap:30px;top:30px;left:100px;position:absolute}.images__img{overflow:hidden}.feedback__image img,.images__img img{width:100%;-o-object-fit:cover;object-fit:cover}.images__img img{min-width:100%;height:100%;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.images__img img:hover{-webkit-transform:scale(1.3);-ms-transform:scale(1.3);transform:scale(1.3)}.grid-item-1{padding-top:20px}.grid-item-2{grid-area:2/1/3/2}.grid-item-1{grid-area:1/2/3/3}.feedback__inner,.feedback__inputs{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-direction:normal}.feedback__inputs{-webkit-box-orient:vertical;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:start;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:10px;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.feedback__inner{-webkit-box-orient:horizontal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:20px;height:-webkit-max-content;height:-moz-max-content;height:max-content}.feedback__image img{height:370px}.textfield{position:relative;margin:0;padding:0;border:0;width:390px}.textfield__label{top:12px;left:15px;position:absolute;display:block;font-size:14px;color:#8d8d8d;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:text}.textfield__label::after{position:relative;top:-3px;left:1px;display:inline-block;content:"*";color:#d0011b}.textfield__input{background:#f3f3f3;padding:14px;display:block;width:100%;height:45px}.textfield__input.textarea{height:150px;width:100%}.textfield__input:focus{border-color:#3a82c6}.textfield__input:disabled{border-color:#e6e6e6;background:#f9fafb}.textfield__input[required]::-webkit-input-placeholder{color:transparent}.textfield__input[required]::-moz-placeholder{color:transparent}.textfield__input[required]:-ms-input-placeholder{color:transparent}.textfield__input[required]::-ms-input-placeholder{color:transparent}.textfield__input[required]::placeholder{color:transparent}.textfield__input::-webkit-input-placeholder{font-size:14px;color:#8d8d8d}.textfield__input::-moz-placeholder{font-size:14px;color:#8d8d8d}.textfield__input:-ms-input-placeholder{font-size:14px;color:#8d8d8d}.textfield__input::-ms-input-placeholder{font-size:14px;color:#8d8d8d}.textfield__input::placeholder{font-size:14px;color:#8d8d8d}.textfield__input:disabled+.textfield__label,.textfield__input:focus+.textfield__label,.textfield__input:valid+.textfield__label{display:none}.actions{padding-top:20px}.actions__agreement{max-width:370px;margin-bottom:20px}.checkbox{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:10px}.checkbox__label{font:400 14px "TT Hoves"}.checkbox__input{background:#fff;-webkit-appearance:none;-moz-appearance:none;appearance:none;margin:0;font:inherit;color:#333;min-width:20px;height:20px;border:1.5px solid #333;border-radius:.15em;-webkit-transform:translateY(-.075em);-ms-transform:translateY(-.075em);transform:translateY(-.075em);display:grid;place-content:center}.checkbox__input::before{content:"";width:10px;height:10px;-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);-webkit-transition:120ms -webkit-transform ease-in-out;-o-transition:120ms transform ease-in-out;transition:120ms transform ease-in-out;transition:120ms transform ease-in-out,120ms -webkit-transform ease-in-out;border-radius:2px;-webkit-box-shadow:inset 1em 1em #333;box-shadow:inset 1em 1em #333;-webkit-transform-origin:bottom left;-ms-transform-origin:bottom left;transform-origin:bottom left;-webkit-clip-path:polygon(14% 44%,0 65%,50% 100%,100% 16%,80% 0,43% 62%);clip-path:polygon(14% 44%,0 65%,50% 100%,100% 16%,80% 0,43% 62%)}.checkbox__input:checked::before{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}@font-face{font-family:"TT Hoves";src:url(../fonts/TTHoves-Bold.woff2) format("woff2"),url(../fonts/TTHoves-Bold.woff) format("woff"),url(../fonts/TTHoves-Bold.ttf) format("truetype");font-weight:700;font-style:normal}@font-face{font-family:"TT Hoves";src:url(../fonts/TTHoves-Regular.woff2) format("woff2"),url(../fonts/TTHoves-Regular.woff) format("woff"),url(../fonts/TTHoves-Regular.ttf) format("truetype");font-weight:400;font-style:normal}@font-face{font-family:"TT Hoves";src:url(../fonts/TTHoves-Light.woff2) format("woff2"),url(../fonts/TTHoves-Light.woff) format("woff"),url(../fonts/TTHoves-Light.ttf) format("truetype");font-weight:300;font-style:normal}@font-face{font-family:"TT Hoves";src:url(../fonts/TTHoves-Medium.woff2) format("woff2"),url(../fonts/TTHoves-Medium.woff) format("woff"),url(../fonts/TTHoves-Medium.ttf) format("truetype");font-weight:500;font-style:normal}.footer{background:#333;color:#fff}.footer__section{-webkit-box-flex:0;-ms-flex:0 1 25%;flex:0 1 25%}.footer__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:35px;padding:50px 0}.footer__heading{font:700 16px "TT Hoves";margin-bottom:20px}.footer-nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:start;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:15px}.link{color:#fff;font-size:14px;font-weight:500}.contacts__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:start;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:30px}.contacts__list-item{-webkit-padding-start:7px;padding-inline-start:7px;margin-left:20px}.contacts__list-item:nth-child(1){list-style:url(../../img/location.svg)}.contacts__list-item:nth-child(2){list-style:url(../../img/phone.svg)}.contacts__list-item:nth-child(3){list-style:url(../../img/mail.svg)}.bottom,.media__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:40px}.bottom{height:70px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:0;color:rgba(200,200,200,.5);border-top:1px solid rgba(200,200,200,.5)}.bottom__copyright{text-align:center}header{background:#fff}.header__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:10px;height:100px}.burger,.logo{position:relative}.logo{-webkit-box-flex:0;-ms-flex:0 1 50%;flex:0 1 50%}.burger{height:15px;width:28px;display:none;margin-left:auto}.burger span{background:#333;display:block;content:"";width:30px;height:2px;position:absolute;-webkit-transition:.3s;-o-transition:.3s;transition:.3s;border-radius:3px}.burger span:first-child{top:0;left:0}.burger span:last-child{bottom:0;left:0}.burger.close span:first-child{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg);top:7px}.burger.close span:last-child{-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg);bottom:6px}.nav{-webkit-transition:.3s;-o-transition:.3s;transition:.3s;width:100%}.nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:60px}.nav__link{display:block;font-size:12px;color:#000;padding:4px 0;text-transform:uppercase;border-top:1px solid transparent;border-bottom:1px solid transparent}.nav__item,.nav__link{-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.nav__item.active,.nav__item:hover{border-bottom:1px solid #333}.nav__item.active{border-top:1px solid #333}.intro{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:0;z-index:1}.intro__title{font:400 64px/100% "TT Hoves";text-transform:uppercase;color:#bdbdbd}.intro__title span{color:#333;font-weight:700}.intro__inner{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:start;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:80px}.switcher{background:#f2f2f2;width:53px;height:53px;border:1px solid #f2f2f2;cursor:pointer}.switcher.last{background:#fff}.slider{width:700px;margin:0 auto;overflow:hidden;position:relative}.slider__slides{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%}.img-bg,.projects__item img{width:100%;-o-object-fit:cover;object-fit:cover}.img-bg{top:0;left:0;position:absolute;height:100%;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.img-bg:hover{-webkit-transform:scale(1.2);-ms-transform:scale(1.2);transform:scale(1.2)}.numbers,.projects__grid,.slide{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row}.slide{min-width:700px;height:750px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:0;overflow:hidden;position:relative;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.slide .btn{bottom:0;left:0;position:absolute}.numbers,.projects__grid{gap:20px}.numbers{color:#bdbdbd;font-size:24px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start}.numbers span{background:#bdbdbd;display:block;width:43px;height:1px;-webkit-transform:rotate(-45deg);-ms-transform:rotate(-45deg);transform:rotate(-45deg)}.projects__grid{-webkit-box-align:start;-ms-flex-align:start;align-items:start;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-bottom:30px}.projects__item{position:relative;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;height:255px;cursor:pointer}.projects__item img{height:255px}.projects__item:hover .overlay{opacity:1}.overlay{background:#333333bc;top:0;left:0;position:absolute;width:100%;height:100%;padding:40px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:start;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:0;opacity:0;-webkit-transition:.3s;-o-transition:.3s;transition:.3s}.overlay__text{font:700 64px/100% "TT Hoves";color:#fff;margin-bottom:15px;text-transform:uppercase}.overlay__link,.task,.tasks__info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-direction:normal;-webkit-box-align:start;-ms-flex-align:start;align-items:start}.overlay__link{font:400 12px/100% "TT Hoves";color:#fff;text-transform:uppercase;position:relative;-webkit-box-orient:vertical;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:0;width:110px}.overlay__link:after{content:url(../../img/arrow-light.svg);top:50%;right:0;position:absolute;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%)}.task,.tasks__info{-webkit-box-orient:horizontal;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:60px}.task{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:30px}.task__number{font:900 200px "Roboto",sans-serif;color:#f2f2f2}.task__text{font-size:22px;font-style:normal;font-weight:400;line-height:160%;max-width:420px}@supports (-webkit-appearance:none){.btn,.btn:hover{background-image:url(../../img/arrow.svg)}.btn-dark,.btn-dark:hover{background-image:url(../../img/arrow-light.svg)}}@media screen and (max-width:1200px){.about{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:30px}.about__info{max-width:100%}.about__info .btn{margin:0 auto}.images__grid{width:100%;position:static;grid-template-columns:repeat(2,1fr)}.task__text{font-size:20px}}@media screen and (max-width:1024px){.slider{width:550px}.slide{min-width:550px;height:600px}.intro__title{font-size:60px}.intro__inner{gap:60px}}@media screen and (max-width:990px){.tasks__info{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:30px}.task__text{max-width:100%}.task__number{font-size:150px}}@media screen and (max-width:870px){.intro{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:20px}.intro__inner{gap:30px;width:100%;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.slider{width:calc(100vw - 30px)}.slide{min-width:100%}}@media screen and (max-width:768px){.about{padding:20px 40px}.feedback__image{display:none}.textfield{width:100%}.actions__agreement{max-width:100%}.footer__inner{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:50px}.footer__heading{font-size:20px}.link{font-size:16px}.logo{margin:0 auto}.bottom__copyright{font-size:14px}.burger{display:block}.nav{position:fixed;right:-100%;top:100px;z-index:100;background-color:#fff;width:100%;height:100%}.nav__list{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-ms-flex-align:start;align-items:start;gap:0}.nav__link{font-size:18px}.nav__item{width:100%}.nav__item,.nav__item.active,.nav__item:hover{border-top:1px solid transparent;border-bottom:1px solid transparent}.nav__item.active{background-color:#f2f2f2}.nav__item:hover{background-color:rgba(200,200,200,.5)}.nav__link{width:100%;height:100%;padding:15px 0 15px 20px}.nav.open{right:0;z-index:100}.task__text{font-size:18px}}@media screen and (max-width:580px){.btn{width:100%}.section-heading{font-size:46px;text-align:center}.about{padding:20px}.images__grid{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start;gap:20px;width:100%}.images__img{min-width:100%}.grid-item-1{padding:0}}@media screen and (max-width:560px){.overlay{padding:20px}.overlay__text{font-size:50px}}@media screen and (max-width:540px){.intro__title{font-size:50px}.slide{height:400px}}@media screen and (max-width:425px){.overlay__text{font-size:40px}.task__number{font-size:130px}.task__text{font-size:16px}}@media screen and (max-width:420px){.intro__title{font-size:40px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */